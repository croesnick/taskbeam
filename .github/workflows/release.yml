name: Release

on:
  release:
    types: [published]

env:
  MIX_ENV: prod

permissions:
  contents: write

jobs:
  release:
    name: Release to Hex.pm
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.18'
        otp-version: '27'

    - name: Cache deps
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-1.18-27-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-1.18-27-

    - name: Extract version from tag
      id: extract_version
      run: |
        # Extract version from tag (e.g., v1.0.0 -> 1.0.0)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version extracted: $VERSION"
        
        # Validate version format (semantic versioning)
        if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?$ ]]; then
          echo "Error: Invalid version format. Expected semantic version (e.g., 1.0.0 or 1.0.0-beta.1)"
          exit 1
        fi

    - name: Update version in mix.exs
      run: |
        VERSION="${{ steps.extract_version.outputs.version }}"
        echo "Updating version to: $VERSION"
        
        # Update the @version module attribute
        sed -i "s/@version \".*\"/@version \"$VERSION\"/" mix.exs
        
        # Verify the change
        grep "@version" mix.exs
        
        # Configure git for version commit
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Install dependencies
      run: mix deps.get

    - name: Compile project
      run: mix compile --warnings-as-errors

    - name: Check formatting
      run: mix format --check-formatted

    - name: Run tests
      run: |
        MIX_ENV=test mix deps.get
        MIX_ENV=test mix test

    - name: Run Credo
      run: mix credo --strict

    - name: Run Dialyzer
      run: |
        mkdir -p priv/plts
        mix dialyzer

    - name: Build CLI binary
      run: mix escript.build

    - name: Test CLI
      run: |
        ./taskbeam --help
        echo "" | ./taskbeam auth --token invalid_token || true

    - name: Generate documentation
      run: mix docs

    - name: Publish to Hex.pm
      env:
        HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
      run: |
        # Publish package to Hex.pm (this also publishes docs to HexDocs)
        mix hex.publish --yes
        
        echo "âœ… Package published to Hex.pm successfully!"
        echo "ðŸ“š Documentation will be available at: https://hexdocs.pm/taskbeam"

    - name: Commit version update
      run: |
        VERSION="${{ steps.extract_version.outputs.version }}"
        
        # Add and commit the version change
        git add mix.exs
        git commit -m "chore: bump version to $VERSION"

        # Push to main branch
        git push origin HEAD:main

        echo "âœ… Version bump committed and pushed to main branch"

    - name: Create release summary
      run: |
        VERSION="${{ steps.extract_version.outputs.version }}"
        echo "## ðŸš€ Release Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** $VERSION" >> $GITHUB_STEP_SUMMARY
        echo "- **Package:** [taskbeam on Hex.pm](https://hex.pm/packages/taskbeam)" >> $GITHUB_STEP_SUMMARY
        echo "- **Documentation:** [taskbeam on HexDocs](https://hexdocs.pm/taskbeam)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### âœ… Completed Steps" >> $GITHUB_STEP_SUMMARY
        echo "- Version extracted and validated" >> $GITHUB_STEP_SUMMARY
        echo "- mix.exs updated with new version" >> $GITHUB_STEP_SUMMARY
        echo "- Full test suite passed" >> $GITHUB_STEP_SUMMARY
        echo "- Code quality checks passed (Credo, Dialyzer)" >> $GITHUB_STEP_SUMMARY
        echo "- CLI binary built and tested" >> $GITHUB_STEP_SUMMARY
        echo "- Documentation generated" >> $GITHUB_STEP_SUMMARY
        echo "- Package published to Hex.pm" >> $GITHUB_STEP_SUMMARY
        echo "- Documentation published to HexDocs" >> $GITHUB_STEP_SUMMARY
        echo "- Version bump committed to main branch" >> $GITHUB_STEP_SUMMARY