name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  test:
    name: Test (Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: '1.17'
            otp: '27'
          - elixir: '1.18'
            otp: '27'
            
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Cache deps
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile dependencies
      run: mix deps.compile

    - name: Compile project
      run: mix compile --warnings-as-errors

    - name: Check formatting
      run: mix format --check-formatted
      if: matrix.elixir == '1.18' && matrix.otp == '27'

    - name: Run tests
      run: mix test

    - name: Run Credo
      run: mix credo --strict
      if: matrix.elixir == '1.18' && matrix.otp == '27'

  dialyzer:
    name: Dialyzer (Elixir 1.18 / OTP 27)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.18'
        otp-version: '27'

    - name: Cache deps
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-1.18-27-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-1.18-27-

    - name: Cache Dialyzer PLTs
      uses: actions/cache@v4
      with:
        path: priv/plts
        key: ${{ runner.os }}-dialyzer-1.18-27-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-dialyzer-1.18-27-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile project
      run: mix compile

    - name: Create PLT directory
      run: mkdir -p priv/plts

    - name: Run Dialyzer
      run: mix dialyzer

  cli:
    name: CLI Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.18'
        otp-version: '27'

    - name: Cache deps
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-1.18-27-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-1.18-27-

    - name: Install dependencies
      run: mix deps.get

    - name: Build CLI binary
      run: mix escript.build

    - name: Test CLI help
      run: ./taskbeam --help

    - name: Test CLI commands help
      run: |
        ./taskbeam help auth
        ./taskbeam help projects  
        ./taskbeam help tasks
        ./taskbeam help labels
        ./taskbeam help add-task
        ./taskbeam help complete
        
    - name: Test CLI with invalid token (should fail gracefully)
      run: |
        echo "" | ./taskbeam auth --token invalid_token || true

    - name: Upload CLI binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: taskbeam-cli
        path: taskbeam
        retention-days: 7